<?xml version="1.0" encoding="UTF-8"?>
<!--
    - DispatcherServlet application context for PetClinic's web tier.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan
            base-package="itat.zttc.shop.web"/>

    <mvc:annotation-driven />

    <!--  all resources inside folder src/main/webapp/resources are mapped so they can be refered to inside JSP files
        (see header.jsp for more details) -->
    <mvc:resources mapping="/css/**" location="/css/"/>

    <!-- uses WebJars so Javascript and CSS libs can be declared as Maven dependencies (Bootstrap, jQuery...) -->
    <!--<mvc:resources mapping="/webjars/**" location="classpath:/META-INF/resources/webjars/"/>-->

    <mvc:view-controller path="/" view-name="welcome"/>

    <!-- serve static resources (*.html, ...) from src/main/webapp/ -->
    <mvc:default-servlet-handler/>

    <!--<bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">-->
        <!--<property name="formatters">-->
            <!--<set>-->
                <!--<bean class="org.springframework.samples.petclinic.web.PetTypeFormatter"/>-->
            <!--</set>-->
        <!--</property>-->
    <!--</bean>-->

    <!--
        - Message source for this context, loaded from localized "messages_xx" files.
        - Files are stored inside src/main/resources
    -->
    <!--<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource"-->
          <!--p:basename="messages/messages"/>-->

    <!--
        - This bean resolves specific types of exceptions to corresponding logical
        - view names for error views.
    -->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <!-- view name resolved using bean of type InternalResourceViewResolver (declared in mvc-view-config.xml) -->
        <property name="defaultErrorView" value="exception"/>
        <!-- results into 'WEB-INF/jsp/exception.jsp' -->
        <property name="warnLogCategory" value="warn"/>
        <!-- needed otherwise exceptions won't be logged anywhere -->
    </bean>
    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="contentNegotiationManager" ref="cnManager"/>

        <property name="viewResolvers">
            <list>
                <!-- Default viewClass: JSTL view (JSP with html output) -->
                <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
                    <!-- Example: a logical view name of 'vets' is mapped to '/WEB-INF/jsp/vets.jsp' -->
                    <property name="prefix" value="/WEB-INF/jsp/"/>
                    <property name="suffix" value=".jsp"/>
                </bean>

                <!-- Used here for 'xml' and 'atom' views  -->
                <bean class="org.springframework.web.servlet.view.BeanNameViewResolver"/>
            </list>
        </property>
    </bean>

    <!-- Simple strategy: only path extension is taken into account -->
    <bean id="cnManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="favorPathExtension" value="true"/>
        <property name="ignoreAcceptHeader" value="true"/>
        <property name="defaultContentType" value="text/html"/>

        <property name="mediaTypes">
            <map>
                <entry key="html" value="text/html"/>
                <entry key="xml" value="application/xml"/>
                <entry key="atom" value="application/atom+xml"/>
            </map>
        </property>
    </bean>

    <!-- Renders an Atom feed of the visits. Used by the BeanNameViewResolver  -->
    <!--<bean id="vets/vetList.atom" class="org.springframework.samples.petclinic.web.VetsAtomView"/>-->

    <!-- Renders an XML view. Used by the BeanNameViewResolver  -->
    <!--<bean id="vets/vetList.xml" class="org.springframework.web.servlet.view.xml.MarshallingView">-->
        <!--<property name="marshaller" ref="marshaller"/>-->
    <!--</bean>-->
</beans>
